apiVersion: v1
kind: Service
metadata:
  name: plex
  namespace: media
spec:
  type: LoadBalancer
  loadBalancerIP: 10.69.1.165
  selector:
    app: plex
  ports:
  - name: plex
    port: 32400
    targetPort: 32400
    protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plex
  namespace: media
  labels:
    app: plex
spec:
  replicas: 1
  selector:
    matchLabels:
      app: plex
  template:
    metadata:
      labels:
        app: plex
    spec:
      # InitContainer to fix file ownership before Plex starts
      # Runs as root to change ownership from 977:988 to 1000:1000
      # Note: NFS ownership fixing is best-effort; linuxserver/plex handles permissions via PUID/PGID
      initContainers:
      - name: fix-permissions
        image: busybox:latest
        command:
        - sh
        - -c
        - |
          echo "Fixing ownership of /config/plex to 1000:1000..."
          chown -R 1000:1000 /config/plex 2>/dev/null || true
          echo "Permission fix complete (best-effort on NFS)"
        securityContext:
          runAsUser: 0  # Run as root to attempt ownership changes
        volumeMounts:
        - name: config
          mountPath: /config
      containers:
      - name: plex
        image: lscr.io/linuxserver/plex:latest
        ports:
        - containerPort: 32400
          name: plex
        env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: TZ
          value: "America/Los_Angeles"
        - name: VERSION
          value: "docker"
        # NOTE: PLEX_CLAIM removed - no longer needed!
        # Server maintains authentication via PlexOnlineToken in Preferences.xml
        # Token persists across restarts thanks to securityContext fixes above
        # If you ever need to claim a FRESH server, use: kubectl set env deployment/plex PLEX_CLAIM=claim-XXX -n media
        # Hardware Transcoding (AMD GPU)
        - name: PLEX_PREFERENCE_1
          value: "TranscoderTempDirectory=/transcode"
        - name: PLEX_PREFERENCE_2
          value: "HardwareAcceleratedCodecs=1"
        # Secure Remote Access Configuration (prevents app.plex.tv connection issues)
        # Changed to secureConnections=0 to allow HTTP from Overseerr/cluster services
        - name: PLEX_PREFERENCE_3
          value: "secureConnections=0"
        - name: PLEX_PREFERENCE_4
          value: "customConnections=http://10.69.1.165:32400"
        - name: PLEX_PREFERENCE_5
          value: "allowedNetworks=10.244.0.0/16,10.96.0.0/12,10.69.1.0/24"
        # Alternative: ADVERTISE_IP tells Plex about external LoadBalancer IP
        - name: ADVERTISE_IP
          value: "http://10.69.1.165:32400"
        # Resource management
        resources:
          requests:
            memory: "4Gi"
            cpu: "2000m"
          limits:
            memory: "8Gi"
            cpu: "4000m"
        # Health checks to ensure Plex is accessible
        livenessProbe:
          httpGet:
            path: /identity
            port: 32400
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /identity
            port: 32400
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /config
          subPath: plex
        - name: storage
          mountPath: /data
        # Fast local storage for transcoding (NOT NFS)
        - name: transcode
          mountPath: /transcode
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: media-configs
      - name: storage
        persistentVolumeClaim:
          claimName: media-storage
      # emptyDir uses local node storage (much faster than NFS)
      - name: transcode
        emptyDir:
          sizeLimit: 20Gi
